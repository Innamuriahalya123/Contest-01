class Solution {
    public int waysToMakeFair(int[] nums) {
        int n = nums.length;
    int[] e = new int[n];
    int[] o = new int[n];
    e[0] = nums[0];
    o[0] = 0; 
    for (int i = 1; i < n; i++) {
        if (i % 2 == 0)
            e[i] = nums[i] + e[i - 1];
        else
            e[i] = e[i - 1];
    }
    for (int i = 1; i < n; i++) {
        if (i % 2 != 0)
            o[i] = nums[i] + o[i - 1];
        else
            o[i] = o[i - 1];
    }
    int c = 0;
    for (int i = 0; i < n; i++) {
        int se, so;
        if (i != 0) {
            se = e[i - 1] + o[n - 1] - o[i];
            so = o[i - 1] + e[n - 1] - e[i];
        } else {
            se = o[n - 1] - o[i];
            so = e[n - 1] - e[i];
        }
        if (se == so)
            c++;
    }
    return c;
        
    }
}
